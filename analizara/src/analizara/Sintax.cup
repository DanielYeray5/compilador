package analizara;

import java_cup.runtime.Symbol;

parser code
{: 
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

/* Terminales */
terminal 
    /* Palabras reservadas */
    Clase, 
    Publico, 
    Privado, 
    Protegido,
    Extiende, 
    Implementa,
    Si, 
    Sino, 
    Mientras, 
    Hacer, 
    Para,
    Intentar, 
    Capturar, 
    Finalmente,
    Break, 
    Continuar, 
    Retorno,
    Opcion, 
    Caso, 
    De_otro_modo,
    
    /* Tipos de datos */
    Entero, 
    Doble, 
    Flotante, 
    Booleano, 
    Cadena, 
    Caracter, 
    Vacio,
    
    /* Valores booleanos */
    Verdadero, 
    Falso,
    
    /* Operadores */
    Suma, 
    Resta, 
    Multiplicacion, 
    Division, 
    Modulo, 
    Potencia,
    Mayor, 
    Menor, 
    Mayor_igual, 
    Menor_igual, 
    Igual, 
    Diferente,
    Y, 
    O, 
    Asignar,
    
    /* Símbolos */
    Parentesis_izq, 
    Parentesis_der,
    Llave_izq, 
    Llave_der,
    Punto_coma, 
    Coma, 
    Punto, 
    Dos_puntos,
    
    /* Otros */
    Identificador, 
    Valor_numerico;

/* No terminales */
non terminal 
    PROGRAMA,
    LISTA_INSTRUCCIONES, 
    INSTRUCCION,
    DECLARACION, 
    DECLARACION_VARIABLE, 
    DECLARACION_METODO,
    TIPO_DATO, 
    MODIFICADOR_CLASE,
    LISTA_PARAMETROS, 
    PARAMETRO,
    EXPRESION, 
    TERMINO, 
    FACTOR,
    SENTENCIA_CONTROL, 
    SENTENCIA_IF, 
    SENTENCIA_WHILE, 
    SENTENCIA_DO_WHILE, 
    SENTENCIA_FOR,
    SENTENCIA_OPCION, 
    CASOS, 
    CASO;

/* Precedencia y asociatividad */
precedence left Identificador;
precedence left O;
precedence left Y;
precedence left Igual, Diferente;
precedence left Menor, Mayor, Menor_igual, Mayor_igual;
precedence left Suma, Resta;
precedence left Multiplicacion, Division, Modulo;
precedence right Potencia;
precedence right Asignar;

/* Regla inicial */
start with PROGRAMA;

/* Reglas de producción */
PROGRAMA ::= 
    MODIFICADOR_CLASE Clase Identificador Llave_izq LISTA_INSTRUCCIONES Llave_der;

MODIFICADOR_CLASE ::= 
    Publico 
    | /* vacío */;

TIPO_DATO ::= 
    Entero 
    | Doble 
    | Flotante 
    | Booleano 
    | Cadena 
    | Caracter 
    | Vacio;

LISTA_INSTRUCCIONES ::= 
    INSTRUCCION LISTA_INSTRUCCIONES 
    | /* vacío */;

INSTRUCCION ::= 
    DECLARACION
    | SENTENCIA_CONTROL
    | Identificador Asignar EXPRESION Punto_coma
    | Retorno EXPRESION Punto_coma
    | Retorno Punto_coma
    | Break Punto_coma
    | Continuar Punto_coma;

DECLARACION ::=
    DECLARACION_VARIABLE
    | DECLARACION_METODO;

DECLARACION_VARIABLE ::=
    /* Variables públicas */
    Publico Entero Identificador Punto_coma
    | Publico Entero Identificador Asignar EXPRESION Punto_coma
    | Publico Cadena Identificador Punto_coma
    | Publico Cadena Identificador Asignar EXPRESION Punto_coma
    | Publico Doble Identificador Punto_coma
    | Publico Doble Identificador Asignar EXPRESION Punto_coma
    | Publico Flotante Identificador Punto_coma
    | Publico Flotante Identificador Asignar EXPRESION Punto_coma
    | Publico Booleano Identificador Punto_coma
    | Publico Booleano Identificador Asignar EXPRESION Punto_coma
    | Publico Caracter Identificador Punto_coma
    | Publico Caracter Identificador Asignar EXPRESION Punto_coma

    /* Variables privadas */
    | Privado Entero Identificador Punto_coma
    | Privado Entero Identificador Asignar EXPRESION Punto_coma
    | Privado Cadena Identificador Punto_coma
    | Privado Cadena Identificador Asignar EXPRESION Punto_coma
    | Privado Doble Identificador Punto_coma
    | Privado Doble Identificador Asignar EXPRESION Punto_coma
    | Privado Flotante Identificador Punto_coma
    | Privado Flotante Identificador Asignar EXPRESION Punto_coma
    | Privado Booleano Identificador Punto_coma
    | Privado Booleano Identificador Asignar EXPRESION Punto_coma
    | Privado Caracter Identificador Punto_coma
    | Privado Caracter Identificador Asignar EXPRESION Punto_coma

    /* Variables protegidas */
    | Protegido Entero Identificador Punto_coma
    | Protegido Entero Identificador Asignar EXPRESION Punto_coma
    | Protegido Cadena Identificador Punto_coma
    | Protegido Cadena Identificador Asignar EXPRESION Punto_coma
    | Protegido Doble Identificador Punto_coma
    | Protegido Doble Identificador Asignar EXPRESION Punto_coma
    | Protegido Flotante Identificador Punto_coma
    | Protegido Flotante Identificador Asignar EXPRESION Punto_coma
    | Protegido Booleano Identificador Punto_coma
    | Protegido Booleano Identificador Asignar EXPRESION Punto_coma
    | Protegido Caracter Identificador Punto_coma
    | Protegido Caracter Identificador Asignar EXPRESION Punto_coma

    /* Variables sin modificador de acceso */
    | Entero Identificador Punto_coma
    | Entero Identificador Asignar EXPRESION Punto_coma
    | Cadena Identificador Punto_coma
    | Cadena Identificador Asignar EXPRESION Punto_coma
    | Doble Identificador Punto_coma
    | Doble Identificador Asignar EXPRESION Punto_coma
    | Flotante Identificador Punto_coma
    | Flotante Identificador Asignar EXPRESION Punto_coma
    | Booleano Identificador Punto_coma
    | Booleano Identificador Asignar EXPRESION Punto_coma
    | Caracter Identificador Punto_coma
    | Caracter Identificador Asignar EXPRESION Punto_coma;

DECLARACION_METODO ::=
    /* Métodos públicos */
    Publico Cadena Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Entero Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Doble Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Flotante Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Booleano Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Caracter Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Publico Vacio Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der

    /* Métodos privados */
    | Privado Cadena Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Entero Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Doble Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Flotante Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Booleano Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Caracter Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Privado Vacio Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der

    /* Métodos protegidos */
    | Protegido Cadena Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Entero Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Doble Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Flotante Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Booleano Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Caracter Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Protegido Vacio Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der

    /* Métodos sin modificador de acceso */
    | Cadena Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Entero Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Doble Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Flotante Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Booleano Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Caracter Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Vacio Identificador 
    Parentesis_izq LISTA_PARAMETROS Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der;

LISTA_PARAMETROS ::=
    PARAMETRO Coma LISTA_PARAMETROS
    | PARAMETRO
    | /* vacío */;

PARAMETRO ::=
    TIPO_DATO Identificador;

EXPRESION ::=
    TERMINO
    | EXPRESION Suma TERMINO
    | EXPRESION Resta TERMINO
    | EXPRESION Y TERMINO
    | EXPRESION O TERMINO
    | EXPRESION Igual TERMINO
    | EXPRESION Diferente TERMINO
    | EXPRESION Menor TERMINO
    | EXPRESION Mayor TERMINO
    | EXPRESION Menor_igual TERMINO
    | EXPRESION Mayor_igual TERMINO;

TERMINO ::=
    FACTOR
    | TERMINO Multiplicacion FACTOR
    | TERMINO Division FACTOR
    | TERMINO Modulo FACTOR
    | TERMINO Potencia FACTOR;

FACTOR ::=
    Identificador
    | Valor_numerico
    | Verdadero
    | Falso
    | Parentesis_izq EXPRESION Parentesis_der;

SENTENCIA_CONTROL ::=
    SENTENCIA_IF
    | SENTENCIA_WHILE
    | SENTENCIA_DO_WHILE
    | SENTENCIA_FOR
    | SENTENCIA_OPCION;

SENTENCIA_IF ::=
    Si Parentesis_izq EXPRESION Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    | Si Parentesis_izq EXPRESION Parentesis_der 
    Llave_izq LISTA_INSTRUCCIONES Llave_der
    Sino Llave_izq LISTA_INSTRUCCIONES Llave_der;

SENTENCIA_WHILE ::=
    Mientras Parentesis_izq EXPRESION Parentesis_der
    Llave_izq LISTA_INSTRUCCIONES Llave_der;

SENTENCIA_DO_WHILE ::=
    Hacer Llave_izq LISTA_INSTRUCCIONES Llave_der
    Mientras Parentesis_izq EXPRESION Parentesis_der Punto_coma;

SENTENCIA_FOR ::=
    Para Parentesis_izq 
    DECLARACION_VARIABLE EXPRESION Punto_coma Identificador Asignar EXPRESION
    Parentesis_der Llave_izq LISTA_INSTRUCCIONES Llave_der;

SENTENCIA_OPCION ::=
    Opcion Parentesis_izq EXPRESION Parentesis_der
    Llave_izq CASOS De_otro_modo Dos_puntos LISTA_INSTRUCCIONES Llave_der;

CASOS ::=
    CASO CASOS
    | CASO;

CASO ::= Caso EXPRESION Dos_puntos LISTA_INSTRUCCIONES;